<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Api.Gax.Grpc</name>
    </assembly>
    <members>
        <member name="T:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2">
            <summary>
            Bridge between a duplex streaming RPC method and higher level
            abstractions, applying call settings as required.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2.BaseCallSettings">
            <summary>
            The base <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for this API call; these can be further overridden by providing
            a <c>CallSettings</c> to <see cref="M:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2.Call(Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2.StreamingSettings">
            <summary>
            Streaming settings.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2.Call(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Initializes a streaming RPC call.
            </summary>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>A gRPC duplex streaming call object.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall`2.WithMergedBaseCallSettings(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns a new API call using the original base call settings merged with <paramref name="callSettings"/>.
            Where there's a conflict, the original base call settings have priority.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ApiCall.GrpcCallAdapter`2">
            <summary>
            Adapter used to mask the fact that when we need response/trailing metadata, a sync call may need
            to use the async gRPC code.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ApiCall`2">
            <summary>
            Bridge between an RPC method (with synchronous and asynchronous variants) and higher level
            abstractions, applying call settings as required.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiCall`2.BaseCallSettings">
            <summary>
            The base <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for this API call; these can be further overridden by providing
            a <c>CallSettings</c> to <see cref="M:Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)"/> or <see cref="M:Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiCall`2.Async(`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Performs an RPC call asynchronously.
            </summary>
            <param name="request">The RPC request.</param>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>A task representing the asynchronous operation. The result of the completed task
            will be the RPC response.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiCall`2.Sync(`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Performs an RPC call synchronously.
            </summary>
            <param name="request">The RPC request.</param>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiCall`2.WithMergedBaseCallSettings(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns a new API call using the original base call settings merged with <paramref name="callSettings"/>.
            Where there's a conflict, the original base call settings have priority.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiCall`2.WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})">
            <summary>
            Constructs a new <see cref="T:Google.Api.Gax.Grpc.ApiCall`2"/> that applies an overlay to
            the underlying <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>. If a value exists in both the original and
            the overlay, the overlay takes priority.
            </summary>
            <param name="callSettingsOverlayFn">Function that builds the overlay <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.ApiCall`2"/> with the overlay applied.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiCall`2.WithGoogleRequestParam(System.String,System.Func{`0,System.String})">
            <summary>
            Constructs a new <see cref="T:Google.Api.Gax.Grpc.ApiCall`2"/> that applies an x-goog-request-params header to each request,
            using the specified parameter name and a value derived from the request.
            </summary>
            <remarks>Values produced by the function are URL-encoded; it is expected that <paramref name="parameterName"/> is already URL-encoded.</remarks>
            <param name="parameterName">The parameter name in the header. Must not be null.</param>
            <param name="valueSelector">A function to call on each request, to determine the value to specify in the header.
            The parameter must not be null, but may return null.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.ApiCall`2"/> which applies the header on each request.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ApiClientStreamingCall`2">
            <summary>
            Bridge between a client streaming RPC method and higher level
            abstractions, applying call settings as required.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiClientStreamingCall`2.BaseCallSettings">
            <summary>
            The base <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for this API call; these can be further overridden by providing
            a <c>CallSettings</c> to <see cref="M:Google.Api.Gax.Grpc.ApiClientStreamingCall`2.Call(Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiClientStreamingCall`2.StreamingSettings">
            <summary>
            Streaming settings.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiClientStreamingCall`2.Call(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Initializes a streaming RPC call.
            </summary>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>A gRPC client streaming call object.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiClientStreamingCall`2.WithMergedBaseCallSettings(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns a new API call using the original base call settings merged with <paramref name="callSettings"/>.
            Where there's a conflict, the original base call settings have priority.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ApiServerStreamingCall`2">
            <summary>
            Bridge between a server streaming RPC method and higher level
            abstractions, applying call settings as required.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.BaseCallSettings">
            <summary>
            The base <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for this API call; these can be further overridden by providing
            a <c>CallSettings</c> to <see cref="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.Call(`0,Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.CallAsync(`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Initializes a streaming RPC call asynchronously.
            </summary>
            <param name="request">The RPC request.</param>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>A task representing the gRPC duplex streaming call object.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.Call(`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Initializes a streaming RPC call.
            </summary>
            <param name="request">The RPC request.</param>
            <param name="perCallCallSettings">The call settings to apply to this specific call,
            overriding defaults where necessary.</param>
            <returns>A gRPC duplex streaming call object.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.WithMergedBaseCallSettings(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Returns a new API call using the original base call settings merged with <paramref name="callSettings"/>.
            Where there's a conflict, the original base call settings have priority.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.WithCallSettingsOverlay(System.Func{`0,Google.Api.Gax.Grpc.CallSettings})">
            <summary>
            Constructs a new <see cref="T:Google.Api.Gax.Grpc.ApiServerStreamingCall`2"/> that applies an overlay to
            the underlying <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>. If a value exists in both the original and
            the overlay, the overlay takes priority.
            </summary>
            <param name="callSettingsOverlayFn">Function that builds the overlay <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.ApiServerStreamingCall`2"/> with the overlay applied.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ApiServerStreamingCall`2.WithGoogleRequestParam(System.String,System.Func{`0,System.String})">
            <summary>
            Constructs a new <see cref="T:Google.Api.Gax.Grpc.ApiServerStreamingCall`2"/> that applies an x-goog-request-params header to each request,
            using the specified parameter name and a value derived from the request.
            </summary>
            <remarks>Values produced by the function are URL-encoded; it is expected that <paramref name="parameterName"/> is already URL-encoded.</remarks>
            <param name="parameterName">The parameter name in the header. Must not be null.</param>
            <param name="valueSelector">A function to call on each request, to determine the value to specify in the header.
            The parameter must not be null, but may return null.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.ApiServerStreamingCall`2"/> which applies the header on each request.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.AsyncResponseStream`1">
            <summary>
            An adapter from the gRPC stream representation (<see cref="T:Grpc.Core.IAsyncStreamReader`1"/>) to <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            and <see cref="T:System.Collections.Generic.IAsyncEnumerator`1"/>. Note that <see cref="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)"/> can only
            be called once per instance due to the "only iterate once" nature of the response stream.
            </summary>
            <remarks>
            This type implements both of the standard asynchronous sequence interfaces for simplicity of use:
            <list type="bullet">
              <item>C# 8 users can use  <c>await foreach</c> because it implements <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/></item>
              <item>It's compatible with the System.Linq.Async package for query transformations.</item>
              <item>Pre-C# 8 users who will be calling <see cref="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync" /> and <see cref="P:Google.Api.Gax.Grpc.AsyncResponseStream`1.Current"/> directly don't need
              to call <see cref="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)"/>.</item>
            </list>
            </remarks>
            <typeparam name="TResponse">The response type.</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.AsyncResponseStream`1.Current">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>
            Begins iterating over the response stream, using the specified cancellation token. This method can only be called
            once per instance.
            </summary>
            <param name="cancellationToken">The cancellation token to use in subsequent <see cref="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync"/> calls.</param>
            <exception cref="T:System.InvalidOperationException">This method has already been called on this instance.</exception>
            <returns>An iterator over the response stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync(System.Threading.CancellationToken)">
            <summary>
            Moves to the next item, using the specified cancellation token.
            </summary>
            <remarks></remarks>
            <param name="cancellationToken">The cancellation token to use for this step.</param>
            <returns>A task that will complete with a result of true if the enumerator was successfully advanced to the next element, or false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.MoveNextAsync">
            <summary>
            Moves to the next item, using the cancellation token configured by <see cref="M:Google.Api.Gax.Grpc.AsyncResponseStream`1.GetAsyncEnumerator(System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2">
            <summary>
            Base class for bidirectional streaming RPC methods.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.GrpcCall">
            <summary>
            The underlying gRPC duplex streaming call.
            Warning: DO NOT USE <c>GrpcCall.RequestStream</c> at all if using
            <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.TryWriteAsync(`0)"/>, <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteAsync(`0)"/>,
            <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.TryWriteAsync(`0,Grpc.Core.WriteOptions)"/> , or <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteAsync(`0,Grpc.Core.WriteOptions)"/>.
            Doing so will cause conflict with the write-buffer used within the <c>[Try]WriteAsync</c> methods.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.TryWriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed;
            otherwise, a <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/> has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.TryWriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or <see cref="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync"/> has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.TryWriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent.
            Only the first call to this method on any instance will have any effect;
            subsequent calls will return <c>null</c>.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed;
            or <c>null</c> if this method has already been called.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.WriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent. This method can only be called
            once, and further messages cannot be written after it has been called.
            </summary>
            <exception cref="T:System.InvalidOperationException">This method has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.GetResponseStream">
            <summary>
            Async stream to read streaming responses, exposed as an async sequence.
            The default implementation will use <see cref="P:Google.Api.Gax.Grpc.BidirectionalStreamingBase`2.GrpcCall"/> to extract a response
            stream, and adapt it to <see cref="T:Google.Api.Gax.Grpc.AsyncResponseStream`1"/>.
            </summary>
            <remarks>
            If this method is called more than once, all the returned enumerators will be enumerating over the
            same underlying response stream, which may cause confusion. Additionally, the sequence returned by
            this method can only be iterated over a single time. Attempting to iterate more than once will cause
            an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="T:Google.Api.Gax.Grpc.BidirectionalStreamingSettings">
            <summary>
            Settings for bidirectional streaming.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BidirectionalStreamingSettings.#ctor(System.Int32)">
            <summary>
            Configure settings for bidirectional streaming.
            </summary>
            <param name="bufferedClientWriterCapacity">The capacity of the write buffer.</param>
        </member>
        <member name="P:Google.Api.Gax.Grpc.BidirectionalStreamingSettings.BufferedClientWriterCapacity">
            <summary>
            The capacity of the write buffer, that locally buffers streaming requests
            before they are sent to the server.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1">
            <summary>
            A wrapper around <see cref="T:Grpc.Core.IClientStreamWriter`1"/> which removes the "one write at a time"
            restriction by buffering messages (and the completion signal) up to a given capacity.
            </summary>
            <typeparam name="T">The type of message in the stream.</typeparam>
        </member>
        <member name="F:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1._queue">
            <summary>
            Queue of requests. If this is non-empty, there's at least one request in-flight, which
            is always the head of the queue.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.Capacity">
            <summary>
            The capacity of the writer.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.BufferedWriteCount">
            <summary>
            The number of write calls that have been buffered.
            </summary>
            <remarks>
            The value of this property may change due to activity from other threads. It should only be used
            for testing and similar scenarios where the system state is well understood.
            </remarks>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.#ctor(Grpc.Core.IClientStreamWriter{`0},System.Int32)">
            <summary>
            Constructs an instance which writes to the specified writer, and with the given capacity.
            </summary>
            <param name="writer">The writer to delegate to.</param>
            <param name="capacity">The maximum number of messages to buffer.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.TryWriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed;
            otherwise, a <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.TryWriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or the stream has been completed.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or <see cref="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync"/> has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.HandleWriteComplete(System.Threading.Tasks.Task)">
            <summary>
            One of the writes completes - possibly successfully, possibly not. On success,
            we start the next write (or complete) sending if there is one. On failure, we propagate the result
            of this task to all other tasks. Those will in turn trigger further calls to this method,
            but by that time we'll have retained the failed task so we can just exit quickly.
            </summary>
            <param name="writeResult"></param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.ValidateStateForWrite(System.Boolean,System.Boolean)">
            <summary>
            Validates that we can write to the stream, optionally throwing if there's an error.
            This is basically to avoid a big chunk of code appearing in WriteAsyncImpl.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.TryWriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent, if there is enough space in the buffer.
            This method can only be successfully called once, and further messages cannot be written after it
            has been successfully called.
            </summary>
            <returns><c>null</c> if this stream has already be completed, or if the buffer is full; otherwise a
            <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1.WriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent, if there is enough space in the buffer.
            This method can only be successfully called once, and further messages cannot be written after it
            has been successfully called.
            </summary>
            <exception cref="T:System.InvalidOperationException">This stream has already be completed, or the buffer is full</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.CallSettings">
            <summary>
            Settings to determine how an RPC operates. This type is immutable.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken)">
            <summary>
            Constructs an instance with the specified settings.
            </summary>
            <param name="cancellationToken">Cancellation token that can be used for cancelling the call.</param>
            <param name="expiration"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Expiration"/> to use, or null for default expiration behavior.</param>
            <param name="retry"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Retry"/> to use, or null for default retry behavior.</param>
            <param name="headerMutation">Action to modify the headers to send at the beginning of the call.</param>
            <param name="writeOptions"><see cref="T:Grpc.Core.WriteOptions"/> that will be used for the call.</param>
            <param name="propagationToken"><see cref="T:Grpc.Core.ContextPropagationToken"/> for propagating settings from a parent call.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Grpc.Core.CallCredentials,Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken)">
            <summary>
            Obsolete.
            This is obsolete as it allows per-call credentials to be specified.
            Please use <see cref="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken)"/>,
            and see https://github.com/googleapis/gax-dotnet/blob/main/docs/PER_CALL_CREDENTIAL.md for more information.
            Constructs an instance with the specified settings.
            </summary>
            <param name="cancellationToken">Cancellation token that can be used for cancelling the call.</param>
            <param name="credentials">Credentials to use for the call.</param>
            <param name="expiration"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Expiration"/> to use, or null for default expiration behavior.</param>
            <param name="retry"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Retry"/> to use, or null for default retry behavior.</param>
            <param name="headerMutation">Action to modify the headers to send at the beginning of the call.</param>
            <param name="writeOptions"><see cref="T:Grpc.Core.WriteOptions"/> that will be used for the call.</param>
            <param name="propagationToken"><see cref="T:Grpc.Core.ContextPropagationToken"/> for propagating settings from a parent call.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken,System.Action{Grpc.Core.Metadata},System.Action{Grpc.Core.Metadata})">
            <summary>
            Constructs an instance with the specified settings.
            </summary>
            <param name="cancellationToken">Cancellation token that can be used for cancelling the call.</param>
            <param name="expiration"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Expiration"/> to use, or null for default expiration behavior.</param>
            <param name="retry"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Retry"/> to use, or null for default retry behavior.</param>
            <param name="headerMutation">Action to modify the headers to send at the beginning of the call.</param>
            <param name="writeOptions"><see cref="T:Grpc.Core.WriteOptions"/> that will be used for the call.</param>
            <param name="propagationToken"><see cref="T:Grpc.Core.ContextPropagationToken"/> for propagating settings from a parent call.</param>
            <param name="responseMetadataHandler">Action to invoke when response metadata is received.</param>
            <param name="trailingMetadataHandler">Action to invoke when trailing metadata is received.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Grpc.Core.CallCredentials,Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken,System.Action{Grpc.Core.Metadata},System.Action{Grpc.Core.Metadata})">
            <summary>
            Obsolete.
            This is obsolete as it allows per-call credentials to be specified.
            Please use <see cref="M:Google.Api.Gax.Grpc.CallSettings.#ctor(System.Nullable{System.Threading.CancellationToken},Google.Api.Gax.Expiration,Google.Api.Gax.Grpc.RetrySettings,System.Action{Grpc.Core.Metadata},Grpc.Core.WriteOptions,Grpc.Core.ContextPropagationToken,System.Action{Grpc.Core.Metadata},System.Action{Grpc.Core.Metadata})"/>,
            and see https://github.com/googleapis/gax-dotnet/blob/main/docs/PER_CALL_CREDENTIAL.md for more information.
            Constructs an instance with the specified settings.
            </summary>
            <param name="cancellationToken">Cancellation token that can be used for cancelling the call.</param>
            <param name="credentials">Credentials to use for the call.</param>
            <param name="expiration"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Expiration"/> to use, or null for default expiration behavior.</param>
            <param name="retry"><see cref="P:Google.Api.Gax.Grpc.CallSettings.Retry"/> to use, or null for default retry behavior.</param>
            <param name="headerMutation">Action to modify the headers to send at the beginning of the call.</param>
            <param name="writeOptions"><see cref="T:Grpc.Core.WriteOptions"/> that will be used for the call.</param>
            <param name="propagationToken"><see cref="T:Grpc.Core.ContextPropagationToken"/> for propagating settings from a parent call.</param>
            <param name="responseMetadataHandler">Action to invoke when response metadata is received.</param>
            <param name="trailingMetadataHandler">Action to invoke when trailing metadata is received.</param>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.HeaderMutation">
            <summary>
            Delegate to mutate the metadata which will be sent at the start of the call,
            typically to add custom headers.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.CancellationToken">
            <summary>
            Cancellation token that can be used for cancelling the call.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.WriteOptions">
            <summary>
            <see cref="T:Grpc.Core.WriteOptions"/> that will be used for the call.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.PropagationToken">
            <summary>
            <see cref="T:Grpc.Core.ContextPropagationToken"/> for propagating settings from a parent call.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.Credentials">
            <summary>
            Credentials to use for the call.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.Expiration">
            <summary>
            The expiration for the call (either a timeout or a deadline), or null for the default expiration.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.Retry">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> to use, or null for default retry behavior.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.ResponseMetadataHandler">
            <summary>
            Delegate to receive the metadata associated with a response.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.CallSettings.TrailingMetadataHandler">
            <summary>
            Delegate to receive the metadata sent after the response.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.Merge(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Merges the settings in <paramref name="overlaid"/> with those in
            <paramref name="original"/>, with <paramref name="overlaid"/> taking priority.
            If both arguments are null, the result is null. If one argument is null,
            the other argument is returned. Otherwise, a new object is created with a property-wise
            overlay. Any header mutations are combined, however: the mutation from the original is
            performed, then the mutation in the overlay.
            </summary>
            <param name="original">Original settings. May be null.</param>
            <param name="overlaid">Settings to overlay. May be null.</param>
            <returns>A merged set of call settings.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromCancellationToken(System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token for the new settings.</param>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromCallCredentials(Grpc.Core.CallCredentials)">
            <summary>
            Obsolete. See: https://github.com/googleapis/gax-dotnet/blob/main/PER_CALL_CREDENTIAL.md
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified call credentials, or returns null
            if <paramref name="credentials"/> is null.
            </summary>
            <param name="credentials">The call credentials for the new settings.</param>
            <returns>A new instance, or null if <paramref name="credentials"/> is null.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromExpiration(Google.Api.Gax.Expiration)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified call expiration, or returns null
            if <paramref name="expiration"/> is null.
            </summary>
            <param name="expiration">The call timing for the new settings.</param>
            <returns>A new instance or null if <paramref name="expiration"/> is null..</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromRetry(Google.Api.Gax.Grpc.RetrySettings)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified retry settings, or returns null
            if <paramref name="retry"/> is null.
            </summary>
            <param name="retry">The call timing for the new settings.</param>
            <returns>A new instance or null if <paramref name="retry"/> is null..</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromHeaderMutation(System.Action{Grpc.Core.Metadata})">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified header mutation, or returns null
            if <paramref name="headerMutation"/> is null.
            </summary>
            <param name="headerMutation">Action to modify the headers to send at the beginning of the call.</param>
            <returns>A new instance, or null if <paramref name="headerMutation"/> is null..</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromResponseMetadataHandler(System.Action{Grpc.Core.Metadata})">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified response metadata handler, or returns null
            if <paramref name="responseMetadataHandler"/> is null.
            </summary>
            <param name="responseMetadataHandler">Action to receive response metadata when the call completes.</param>
            <returns>A new instance, or null if <paramref name="responseMetadataHandler"/> is null..</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromTrailingMetadataHandler(System.Action{Grpc.Core.Metadata})">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified trailing metadata handler, or returns null
            if <paramref name="trailingMetadataHandler"/> is null.
            </summary>
            <param name="trailingMetadataHandler">Action to receive trailing metadata when the call completes.</param>
            <returns>A new instance, or null if <paramref name="trailingMetadataHandler"/> is null..</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromHeader(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for the specified header name and value.
            </summary>
            <param name="name">The name of the header to add. Must not be null.</param>
            <param name="value">The value of the header to add. Must not be null.</param>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromFieldMask(System.String)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> that will include a field mask in the request, to
            limit which fields are returned in the response.
            </summary>
            <remarks>
            The precise effect on the request is not guaranteed: it may be through a header or a side-channel,
            for example. Likewise the effect of combining multiple settings containing field masks is not specified.
            </remarks>
            <param name="fieldMask">The field mask for the request. Must not be null.</param>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromGoogleRequestParamsHeader(System.String,System.String)">
            <summary>
            Creates a CallSettings which applies an x-goog-request-params header with the specified
            parameter name and value.
            </summary>
            <remarks>The value is URL-encoded; it is expected that <paramref name="parameterName"/> is already URL-encoded.</remarks>
            <param name="parameterName">The name of the parameter. Must not be null.</param>
            <param name="value">The value of the parameter, which may be null. A null value is equivalent to providing an empty string.</param>
            <returns>A CallSettings which applies the appropriate parameter.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettings.FromRequestReasonHeader(System.String)">
            <summary>
            Creates a CallSettings which applies an x-goog-request-reason header with the specified reason.
            </summary>
            <param name="reason">The request reason to specify in the x-goog-request-reason header. Must not be null</param>
            <returns>A CallSettings which applies the appropriate header.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.CallSettingsExtensions">
            <summary>
            Extension methods for <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>.
            All methods accept a null first parameter as valid unless stated otherwise.
            </summary>
        </member>
        <member name="F:Google.Api.Gax.Grpc.CallSettingsExtensions.QuotaProjectHeaderName">
            <summary>
            The header used to send the project ID used for billing and quotas.
            The value should be set through the credential or the client builder,
            never explicitly as a header.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.MergedWith(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            This method merges the settings in <paramref name="overlaid"/> with those in
            <paramref name="original"/>, with <paramref name="overlaid"/> taking priority.
            If both arguments are null, the result is null. If one argument is null,
            the other argument is returned. Otherwise, a new object is created with a property-wise
            overlay, where null values do not override non-null values.
            Any header mutations are combined, however: the mutation from the original is
            performed, then the mutation in the overlay.
            </summary>
            <param name="original">Original settings. May be null.</param>
            <param name="overlaid">Settings to overlay. May be null.</param>
            <returns>A merged set of call settings, or null if both parameters are null.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithCancellationToken(Google.Api.Gax.Grpc.CallSettings,System.Threading.CancellationToken)">
            <summary>
            Returns a new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the specified cancellation token,
            merged with the (optional) original settings specified by <paramref name="settings"/>.
            </summary>
            <param name="settings">Original settings. May be null, in which case the returned settings
            will only contain the cancellation token.</param>
            <param name="cancellationToken">Cancellation token for the new call settings.</param>
            <returns>A new set of call settings.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithCallCredentials(Google.Api.Gax.Grpc.CallSettings,Grpc.Core.CallCredentials)">
            <summary>
            Obsolete. https://github.com/googleapis/gax-dotnet/blob/main/PER_CALL_CREDENTIAL.md
            Returns a new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the specified call credentials,
            merged with the (optional) original settings specified by <paramref name="settings"/>.
            </summary>
            <param name="settings">Original settings. May be null, in which case the returned settings
            will only contain call credentials.</param>
            <param name="credentials">Call credentials for the new call settings.
            This may be null, in which case any call credentials in <paramref name="settings"/> are
            not present in the new call settings. If both this and <paramref name="settings"/> are null,
            the return value is null.</param>
            <returns>A new set of call settings, or null if both parameters are null.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithExpiration(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Expiration)">
            <summary>
            Returns a new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the specified expiration,
            merged with the (optional) original settings specified by <paramref name="settings"/>.
            </summary>
            <param name="settings">Original settings. May be null, in which case the returned settings
            will only contain the expiration.</param>
            <param name="expiration">Expiration to use in the returned settings, possibly as part of a retry. May be null,
            in which case any expiration in <paramref name="settings"/> is not present in the new call settings. If
            both this and <paramref name="settings"/> are null, the return value is null.</param>
            <returns>A new set of call settings with the specified expiration, or null of both parameters are null.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithRetry(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.RetrySettings)">
            <summary>
            Returns a new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the specified retry settings,
            merged with the (optional) original settings specified by <paramref name="settings"/>.
            </summary>
            <param name="settings">Original settings. May be null, in which case the returned settings
            will only contain call timing.</param>
            <param name="retry">Call timing for the new call settings.
            This may be null, in which case any retry settings in <paramref name="settings"/> are
            not present in the new call settings. If both this and <paramref name="settings"/> are null,
            the return value is null.</param>
            <returns>A new set of call settings, or null if both parameters are null.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithHeader(Google.Api.Gax.Grpc.CallSettings,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the specified header,
            merged with the (optional) original settings specified by <paramref name="settings"/>.
            </summary>
            <param name="settings">Original settings. May be null, in which case the returned settings
            will only contain the header.</param>
            <param name="name">Header name. Must not be null.</param>
            <param name="value">Header value. Must not be null.</param>
            <returns>A new set of call settings including the specified header.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithResponseMetadataHandler(Google.Api.Gax.Grpc.CallSettings,System.Action{Grpc.Core.Metadata})">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithTrailingMetadataHandler(Google.Api.Gax.Grpc.CallSettings,System.Action{Grpc.Core.Metadata})">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithDeadline(Google.Api.Gax.Grpc.CallSettings,System.DateTime)">
            <summary>
            Returns a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> which will have the specified deadline.
            </summary>
            <param name="settings">Existing settings. May be null, meaning there are currently no settings.</param>
            <param name="deadline">The deadline for the new settings.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the given deadline.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithTimeout(Google.Api.Gax.Grpc.CallSettings,System.TimeSpan)">
            <summary>
            Returns a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> which will have the specified timeout.
            </summary>
            <param name="settings">Existing settings. May be null, meaning there are currently no settings.</param>
            <param name="timeout">The timeout for the new settings.</param>
            <returns>A new <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> with the given timeout.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithEarlierDeadline(Google.Api.Gax.Grpc.CallSettings,System.Nullable{System.DateTime},Google.Api.Gax.IClock)">
            <summary>
            Returns a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> which will have an effective deadline of at least <paramref name="deadline"/>.
            If <paramref name="settings"/> already observes an earlier deadline (with respect to <paramref name="clock"/>),
            or if <paramref name="deadline"/> is null, the original settings will be returned.
            </summary>
            <param name="settings">Existing settings. May be null, meaning there are currently no settings.</param>
            <param name="deadline">Deadline to enforce. May be null, meaning there is no deadline to enforce.</param>
            <param name="clock">The clock to use when computing deadlines. Must not be null.</param>
            <returns>The call settings to use to observe the given deadline.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.ValidateNoRetry(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Throws <see cref="T:System.InvalidOperationException"/> if <paramref name="callSettings"/> is non-null and has a Retry;
            otherwise returns the parameter.
            </summary>
            <param name="callSettings">The call settings for the call. May be null.</param>
            <returns><paramref name="callSettings"/></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.ToCallOptions(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.IClock)">
            <summary>
            Transfers settings contained in this into a <see cref="T:Grpc.Core.CallOptions"/>.
            </summary>
            <param name="callSettings">The call settings for the call. May be null.</param>
            <param name="clock">The clock to use for deadline calculation.</param>
            <returns>A <see cref="T:Grpc.Core.CallOptions"/> configured from this <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.CheckMetadata(Grpc.Core.Metadata)">
            <summary>
            Method used to check that the headers set by the uer are valid.
            Current only checks that the <code>x-goog-user-project</code> header is not set
            directly by the user. It should be set either through the credential or the client builder.
            </summary>
            <param name="metadata">The user set headers.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.CallSettingsExtensions.CheckHeader(System.String)">
            <summary>
            Method used to check if a header set by the uer is valid.
            Current only checks that the <code>x-goog-user-project</code> header is not set
            directly by the user. It should be set either through the credential or the client builder.
            </summary>
            <param name="header">The user set header.</param>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ChannelPool">
            <summary>
            A pool of channels for the same service, but with potentially different endpoints. Each endpoint
            has a single channel. All channels created by this pool use default application credentials.
            This class is thread-safe.
            </summary>
        </member>
        <member name="F:Google.Api.Gax.Grpc.ChannelPool._lazyScopedDefaultChannelCredentials">
            <summary>
            Lazily-created task to retrieve the default application channel credentials. Once completed, this
            task can be used whenever channel credentials are required. The returned task always runs in the
            thread pool, so its result can be used synchronously from synchronous methods without risk of deadlock.
            The same channel credentials are used by all pools. The field is initialized in the constructor, as it uses
            _scopes, and you can't refer to an instance field within an instance field initializer.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a channel pool which will apply the specified scopes to the default application credentials
            if they require any.
            </summary>
            <param name="scopes">The scopes to apply. Must not be null, and must not contain null references. May be empty.</param>
            <param name="useJwtWithScopes">A flag preferring use of self-signed JWTs over OAuth tokens 
            when OAuth scopes are explicitly set.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a channel pool which will apply the specified scopes to the default application credentials
            if they require any.
            </summary>
            <param name="scopes">The scopes to apply. Must not be null, and must not contain null references. May be empty.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.ShutdownChannelsAsync">
            <summary>
            Shuts down all the currently-allocated channels asynchronously. This does not prevent the channel
            pool from being used later on, but the currently-allocated channels will not be reused.
            </summary>
            <returns>A task which will complete when all the (current) channels have been shut down.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.GetChannel(Google.Api.Gax.Grpc.GrpcAdapter,System.String,Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <summary>
            Returns a channel from this pool, creating a new one if there is no channel
            already associated with <paramref name="endpoint"/>.
            The specified channel options are applied, but only those options.
            </summary>
            <param name="grpcAdapter">The gRPC implementation to use. Must not be null.</param>
            <param name="endpoint">The endpoint to connect to. Must not be null.</param>
            <param name="channelOptions">The channel options to include. May be null.</param>
            <returns>A channel for the specified endpoint.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.GetChannelAsync(Google.Api.Gax.Grpc.GrpcAdapter,System.String,Google.Api.Gax.Grpc.GrpcChannelOptions,System.Threading.CancellationToken)">
            <summary>
            Asynchronously returns a channel from this pool, creating a new one if there is no channel
            already associated with <paramref name="endpoint"/>.
            The specified channel options are applied, but only those options.
            </summary>
            <param name="grpcAdapter">The gRPC implementation to use. Must not be null.</param>
            <param name="endpoint">The endpoint to connect to. Must not be null.</param>
            <param name="channelOptions">The channel options to include. May be null.</param>
            <param name="cancellationToken">A cancellation token for the operation.</param>
            <returns>A task representing the asynchronous operation. The value of the completed
            task will be channel for the specified endpoint.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ChannelPool.WithCancellationToken``1(System.Threading.Tasks.Task{``0},System.Threading.CancellationToken)">
            <summary>
            Returns a task which can be cancelled by the given cancellation token, but otherwise observes the original
            task's state. This does *not* cancel any work that the original task was doing, and should be used carefully.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ClientBuilderBase`1">
            <summary>
            Base class for API-specific builders.
            </summary>
            <typeparam name="TClient">The type of client created by this builder.</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.Endpoint">
            <summary>
            The endpoint to connect to, or null to use the default endpoint.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.Scopes">
            <summary>
            The scopes to use, or null to use the default scopes.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.ChannelCredentials">
            <summary>
            The channel credentials to use, or null if credentials are being provided in a different way.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CredentialsPath">
            <summary>
            The path to the credentials file to use, or null if credentials are being provided in a different way.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.JsonCredentials">
            <summary>
            The credentials to use as a JSON string, or null if credentials are being provided in a different way.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.TokenAccessMethod">
            <summary>
            The token access method to use, or null if credentials are being provided in a different way.
            </summary>
            <remarks>
            <para>
            To use a GoogleCredential for credentials, set this property using a method group conversion, e.g.
            <c>TokenAccessMethod = credential.GetAccessTokenForRequestAsync</c>
            </para>
            </remarks>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CallInvoker">
            <summary>
            The call invoker to use, or null to create the call invoker when the client is built.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.UserAgent">
            <summary>
            A custom user agent to specify in the channel metadata, or null if no custom user agent is required.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter">
            <summary>
            The gRPC implementation to use, or null to use the default implementation.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection">
            <summary>
            The emulator detection policy to apply when building a client. Derived classes which support
            emulators should create public properties which delegate to this one. The default value is
            <see cref="F:Google.Api.Gax.EmulatorDetection.None"/>.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.QuotaProject">
            <summary>
            The GCP project ID that should be used for quota and billing purposes.
            May be null.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcChannelOptions">
            <summary>
            Any custom channel options to merge with the default options.
            If an option specified both here and in the default options, the custom option
            will take priority. This property may be null (the default) in which case the default
            options are used.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.#ctor">
            <summary>
            Creates a new instance with no settings.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CopyCommonSettings``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})">
            <summary>
            Copies common settings from the specified builder into this one. This is a shallow copy.
            </summary>
            <typeparam name="TOther">The other client type</typeparam>
            <param name="source">The builder to copy from.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CopySettingsForEmulator(Google.Api.Gax.Grpc.ClientBuilderBase{`0})">
            <summary>
            Copies common settings from the specified builder, expecting that any settings around
            credentials and endpoints will be set by the caller, along with any client-specific settings.
            Emulator detection is not copied, to avoid infinite recursion when building.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Validate">
            <summary>
            Validates that the builder is in a consistent state for building. For example, it's invalid to call
            <see cref="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Build"/> on an instance which has both JSON credentials and a credentials path specified.
            </summary>
            <exception cref="T:System.InvalidOperationException">The builder is in an invalid state.</exception>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetEmulatorEnvironment(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})">
            <summary>
            Performs basic emulator detection and validation based on the given environment variables.
            This method is expected to be called by a derived class that supports emulators, in order to perform the common
            work of checking whether the emulator is configured in the environment.
            </summary>
            <remarks>
            <para>
            If the emulator should not be used, either due to being disabled in <see cref="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.EmulatorDetection"/> or
            the appropriate environment variables not being set, this method returns null.
            </para>
            <para>
            Otherwise, a dictionary is returned mapping every value in <paramref name="allEmulatorEnvironmentVariables"/> to the value in
            the environment. Any missing, empty or whitespace-only values are mapped to a null reference in the returned dictionary, but
            the entry will still be present (so callers can use an indexer with the returned dictionary for every environment variable passed in).
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The configuration is inconsistent, e.g. due to some environment variables
            being set but not all the required ones, or any environment variables being set in a production-only environment.</exception>
            <param name="requiredEmulatorEnvironmentVariables">Required emulator environment variables.</param>
            <param name="allEmulatorEnvironmentVariables">All emulator environment variables.</param>
            <param name="environmentVariableProvider">The provider used to retrieve environment variables. This is used to faciliate testing, and defaults
            to using <see cref="M:System.Environment.GetEnvironmentVariable(System.String)"/>.</param>
            <returns>A key/value mapping of the emulator environment variables to their values, or null if the emulator should not be used.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateAtMostOneNotNull(System.String,System.Object[])">
            <summary>
            Validates that at most one of the given values is not null.
            </summary>
            <param name="message">The message if the condition is violated.</param>
            <param name="values">The values to check for nullity.</param>
            <exception cref="T:System.InvalidOperationException">More than one value is null.</exception>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.ValidateOptionExcludesOthers(System.String,System.Object,System.Object[])">
            <summary>
            Validates that if <paramref name="controlling"/> is not null, then every value in <paramref name="values"/> is null.
            </summary>
            <param name="message">The message if the condition is violated.</param>
            <param name="controlling">The value controlling whether or not any other value can be non-null.</param>
            <param name="values">The values checked for non-nullity if <paramref name="controlling"/> is non-null.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvoker">
            <summary>
            Creates a call invoker synchronously. Override this method in a concrete builder type if more
            call invoker mechanisms are supported.
            This implementation calls <see cref="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials"/> if no call invoker is specified.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.CreateCallInvokerAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a call invoker asynchronously. Override this method in a concrete builder type if more
            call invoker mechanisms are supported.
            This implementation calls <see cref="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)"/> if no call
            invoker is specified.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentials">
            <summary>
            Obtains channel credentials synchronously. Override this method in a concrete builder type if more
            credential mechanisms are supported.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelCredentialsAsync(System.Threading.CancellationToken)">
            <summary>
            Obtains channel credentials asynchronously. Override this method in a concrete builder type if more
            credential mechanisms are supported.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultScopes">
            <summary>
            Returns the default scopes for this builder type, used if no scopes are otherwise specified.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetDefaultEndpoint">
            <summary>
            Returns the endpoint for this builder type, used if no endpoint is otherwise specified.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelPool">
            <summary>
            Returns the channel pool to use when no other options are specified. This method is not called unless
            <see cref="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool"/> returns true, so if a channel pool is unavailable, override that property
            to return false and throw an exception from this method.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.DefaultGrpcAdapter">
            <summary>
            Returns the default <see cref="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter"/> to use if
            <see cref="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcAdapter"/> is not set.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.GetChannelOptions">
            <summary>
            Returns the options to use when creating a channel, taking <see cref="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.GrpcChannelOptions"/>
            into account.
            </summary>
            <returns>The options to use when creating a channel.</returns>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.CanUseChannelPool">
            <summary>
            Returns whether or not a channel pool can be used if a channel is required. The default behavior is to return
            true if and only if no quota project, scopes, credentials or token access method have been specified and 
            if UseJwtAccessWithScopes flag matches the flag in ChannelPool. 
            Derived classes should override this property if there are other reasons why the channel pool should not be used.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientBuilderBase`1.UseJwtAccessWithScopes">
            <summary>
             Returns whether or not self-signed JWTs will be used over OAuth tokens when OAuth scopes are explicitly set.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.Build">
            <summary>
            Builds the resulting client.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientBuilderBase`1.BuildAsync(System.Threading.CancellationToken)">
            <summary>
            Builds the resulting client asynchronously.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ClientHelper">
            <summary>
            Common helper code shared by clients.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientHelper.#ctor(Google.Api.Gax.Grpc.ServiceSettingsBase)">
            <summary>
            Constructs a helper from the given settings.
            Behavior is undefined if settings are changed after construction.
            </summary>
            <param name="settings">The service settings.</param>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientHelper.Clock">
            <summary>
            The clock used for timing of retries and deadlines. This is never
            null; if the clock isn't specified in the settings, this property
            will return the <see cref="T:Google.Api.Gax.SystemClock"/> instance.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientHelper.Scheduler">
            <summary>
            The scheduler used for delays of retries. This is never
            null; if the scheduler isn't specified in the settings, this property
            will return the <see cref="T:Google.Api.Gax.SystemScheduler"/> instance.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientHelper.BuildApiCall``2(System.Func{``0,Grpc.Core.CallOptions,Grpc.Core.AsyncUnaryCall{``1}},System.Func{``0,Grpc.Core.CallOptions,``1},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Builds an <see cref="T:Google.Api.Gax.Grpc.ApiCall"/> given suitable underlying async and sync calls.
            </summary>
            <typeparam name="TRequest">Request type, which must be a protobuf message.</typeparam>
            <typeparam name="TResponse">Response type, which must be a protobuf message.</typeparam>
            <param name="asyncGrpcCall">The underlying synchronous gRPC call.</param>
            <param name="syncGrpcCall">The underlying asynchronous gRPC call.</param>
            <param name="perMethodCallSettings">The default method call settings.</param>
            <returns>An API call to proxy to the RPC calls</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientHelper.BuildApiCall``2(System.Func{``0,Grpc.Core.CallOptions,Grpc.Core.AsyncServerStreamingCall{``1}},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Builds an <see cref="T:Google.Api.Gax.Grpc.ApiServerStreamingCall"/> given a suitable underlying server streaming call.
            </summary>
            <typeparam name="TRequest">Request type, which must be a protobuf message.</typeparam>
            <typeparam name="TResponse">Response type, which must be a protobuf message.</typeparam>
            <param name="grpcCall">The underlying gRPC server streaming call.</param>
            <param name="perMethodCallSettings">The default method call settings.</param>
            <returns>An API call to proxy to the RPC calls</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientHelper.BuildApiCall``2(System.Func{Grpc.Core.CallOptions,Grpc.Core.AsyncDuplexStreamingCall{``0,``1}},Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Builds an <see cref="T:Google.Api.Gax.Grpc.ApiBidirectionalStreamingCall"/> given a suitable underlying duplex call.
            </summary>
            <typeparam name="TRequest">Request type, which must be a protobuf message.</typeparam>
            <typeparam name="TResponse">Response type, which must be a protobuf message.</typeparam>
            <param name="grpcCall">The underlying gRPC duplex streaming call.</param>
            <param name="perMethodCallSettings">The default method call settings.</param>
            <param name="streamingSettings">The default streaming settings.</param>
            <returns>An API call to proxy to the RPC calls</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientHelper.BuildApiCall``2(System.Func{Grpc.Core.CallOptions,Grpc.Core.AsyncClientStreamingCall{``0,``1}},Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.ClientStreamingSettings)">
            <summary>
            Builds an <see cref="T:Google.Api.Gax.Grpc.ApiClientStreamingCall"/> given a suitable underlying client streaming call.
            </summary>
            <typeparam name="TRequest">Request type, which must be a protobuf message.</typeparam>
            <typeparam name="TResponse">Response type, which must be a protobuf message.</typeparam>
            <param name="grpcCall">The underlying gRPC client streaming call.</param>
            <param name="perMethodCallSettings">The default method call settings.</param>
            <param name="streamingSettings">The default streaming settings.</param>
            <returns>An API call to proxy to the RPC calls</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ClientStreamingBase`2">
            <summary>
            Base class for the client-side streaming RPC methods.
            </summary>
            <typeparam name="TRequest">RPC request type</typeparam>
            <typeparam name="TResponse">RPC response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientStreamingBase`2.GrpcCall">
            <summary>
            The underlying gRPC client streaming call.
            Warning: DO NOT USE <c>GrpcCall.RequestStream</c> at all if using
            <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.TryWriteAsync(`0)"/>, <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteAsync(`0)"/>,
            <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.TryWriteAsync(`0,Grpc.Core.WriteOptions)"/> , or <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteAsync(`0,Grpc.Core.WriteOptions)"/>.
            Doing so will cause conflict with the write-buffer used within the <c>[Try]WriteAsync</c> methods.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.TryWriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed;
            otherwise, a <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteAsync(`0)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called. The same write options will be used as for the previous message.
            </summary>
            <param name="message">The message to write.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/> has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.TryWriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <returns><c>null</c> if the message queue is full or the stream has already been completed.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteAsync(`0,Grpc.Core.WriteOptions)">
            <summary>
            Writes a message to the stream, if there is enough space in the buffer and <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/>
            hasn't already been called.
            </summary>
            <param name="message">The message to write.</param>
            <param name="options">The write options to use for this message.</param>
            <exception cref="T:System.InvalidOperationException">There isn't enough space left in the buffer,
            or <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/> has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the message has been written to the stream.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.TryWriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent.
            Only the first call to this method on any instance will have any effect;
            subsequent calls will return <c>null</c>.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed;
            or <c>null</c> if this method has already been called.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync">
            <summary>
            Completes the stream when all buffered messages have been sent. This method can only be called
            once, and further messages cannot be written after it has been called.
            </summary>
            <exception cref="T:System.InvalidOperationException">This method has already been called.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when the stream has finished being completed.</returns>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientStreamingBase`2.ResponseAsync">
            <summary>
            Asynchronous call result. This task will only complete after
            <see cref="M:Google.Api.Gax.Grpc.ClientStreamingBase`2.WriteCompleteAsync"/> has already been called.
            </summary>
            <returns>A task representing the asynchronous operation. The result of the completed task
            will be the RPC response.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ClientStreamingSettings">
            <summary>
            Settings for client streaming.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ClientStreamingSettings.#ctor(System.Int32)">
            <summary>
            Configure settings for client streaming.
            </summary>
            <param name="bufferedClientWriterCapacity"></param>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ClientStreamingSettings.BufferedClientWriterCapacity">
            <summary>
            The capacity of the write buffer, that locally buffers streaming requests
            before they are sent to the server.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ForwardingCallInvoker`1">
            <summary>
            Non-generic static class just for generic type inference, to make it easier to construct instances
            of <see cref="T:Google.Api.Gax.Grpc.ForwardingCallInvoker`4"/>.
            </summary>
            <typeparam name="TSourceRequest">The type of the expected source request. Specifying this explicitly
            is usually sufficient to allow type inference to work for generic methods within this class.</typeparam>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ForwardingCallInvoker`1.Create``3(Grpc.Core.CallInvoker,System.String,Grpc.Core.Method{``1,``2},System.Func{`0,``1},System.Func{`0,``2,``0})">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.ForwardingCallInvoker`4"/>
            to forward a single unary call to a method in an existing <see cref="T:Grpc.Core.CallInvoker"/>.
            </summary>
            <typeparam name="TSourceResponse">The type of the source response, i.e. the response we expect to return
            to the caller at the end of the method.</typeparam>
            <typeparam name="TTargetRequest">The type of the target request, i.e. the request we'll forward on
            to <paramref name="originalInvoker"/>.</typeparam>
            <typeparam name="TTargetResponse">The type of the target response, i.e. the response we expect to be
            returned by <paramref name="originalInvoker"/>.</typeparam>
            <param name="originalInvoker">The original invoker that will handle the request.</param>
            <param name="sourceMethodFullName">The full name (as reported by <see cref="P:Grpc.Core.Method`2.FullName"/>)
            of the method to forward.</param>
            <param name="targetMethod">The target method to call on <paramref name="originalInvoker"/>.</param>
            <param name="requestConverter">A delegate to convert source requests to target requests.</param>
            <param name="responseConverter">A delegate to convert target responses to source responses, with
            additional context being provided from the original source request.</param>
            <returns>A call invoker forwarding the specified call.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ForwardingCallInvoker`4">
            <summary>
            A <see cref="T:Grpc.Core.CallInvoker"/> which forwards specific calls to an existing invoker,
            transforming the requests and responses as necessary.
            </summary>
            <remarks>
            <para>
            It would be cleaner to write an interceptor for this functionality, but that doesn't allow for the request/response types to be changed.
            </para>
            <para>
            Currently, only unary methods are supported, and only a single method can be forwarded. Any
            other method results in an <see cref="T:Grpc.Core.RpcException"/> with a status code of <see cref="F:Grpc.Core.StatusCode.Unimplemented"/>.
            The type parameters of this class would make it hard to support multiple calls, which is why the factory
            class method has a return type of <see cref="T:Grpc.Core.CallInvoker"/> rather than the concrete class: we may implement
            multi-method support via composition of multiple call invokers.
            </para>
            </remarks>
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcAdapter">
            <summary>
            Interoperability layer for the aspects of gRPC that aren't covered by Grpc.Core.Api.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcAdapter.CreateChannel(System.String,Grpc.Core.ChannelCredentials,Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <summary>
            Creates a channel for the given endpoint, using the given credentials and options.
            </summary>
            <param name="endpoint">The endpoint to connect to. Must not be null.</param>
            <param name="credentials">The channel credentials to use. Must not be null.</param>
            <param name="options">The channel options to use. Must not be null.</param>
            <returns>A channel for the specified settings.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcAdapter.CreateChannelImpl(System.String,Grpc.Core.ChannelCredentials,Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <summary>
            Creates a channel for the given endpoint, using the given credentials and options. All parameters
            are pre-validated to be non-null.
            </summary>
            <param name="endpoint">The endpoint to connect to. Will not be null.</param>
            <param name="credentials">The channel credentials to use. Will not be null.</param>
            <param name="options">The channel options to use. Will not be null.</param>
            <returns>A channel for the specified settings.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcChannelOptions">
            <summary>
            Portable abstraction of channel options
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.Empty">
            <summary>
            An empty set of channel options.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.EnableServiceConfigResolution">
            <summary>
            If non-null, explicitly enables or disables service configuration resolution.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.KeepAliveTime">
            <summary>
            If non-null, explicitly specifies the keep-alive period for the channel.
            This specifies how often a keep-alive request is sent.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.KeepAliveTimeout">
            <summary>
            If non-null, explicitly specifies the keep-alive timeout for the channel.
            This specifies how long gRPC will wait for a keep-alive response before
            assuming the channel is no longer valid, and closing it.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.PrimaryUserAgent">
            <summary>
            If non-null, explicitly specifies the primary user agent for the channel.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.MaxSendMessageSize">
            <summary>
            If non-null, explicitly specifies the maximum size in bytes that can be sent from the client, per request.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.MaxReceiveMessageSize">
            <summary>
            If non-null, explicitly specifies the maximum size in bytes that can be received from the client, per response.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOptions">
            <summary>
            Immutable list of custom options. This is never null, but may be empty.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithPrimaryUserAgent(System.String)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.PrimaryUserAgent"/> set to
            <paramref name="primaryUserAgent"/>.
            </summary>
            <param name="primaryUserAgent">The new primary user agent. Must not be null.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithEnableServiceConfigResolution(System.Boolean)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.EnableServiceConfigResolution"/> set to
            <paramref name="enableServiceConfigResolution"/>.
            </summary>
            <param name="enableServiceConfigResolution">The new option for enabling service config resolution.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithKeepAliveTime(System.TimeSpan)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.KeepAliveTime"/> set to
            <paramref name="keepAliveTime"/>.
            </summary>
            <param name="keepAliveTime">The new keep-alive time.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithKeepAliveTimeout(System.TimeSpan)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.KeepAliveTimeout"/> set to
            <paramref name="keepAliveTimeout"/>.
            </summary>
            <param name="keepAliveTimeout">The new keep-alive timeout.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithMaxSendMessageSize(System.Int32)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.MaxSendMessageSize"/> set to
            <paramref name="maxSendMessageSize"/>.
            </summary>
            <param name="maxSendMessageSize">The new maximum send message size, in bytes.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithMaxReceiveMessageSize(System.Int32)">
            <summary>
            Returns a new instance with the same options as this one, but with <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.MaxReceiveMessageSize"/> set to
            <paramref name="maxReceiveMessageSize"/>.
            </summary>
            <param name="maxReceiveMessageSize">The new maximum receive message size, in bytes.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithCustomOption(System.String,System.Int32)">
            <summary>
            Returns a new instance with the same options as this one, but with a new integer-valued <see cref="T:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption"/>
            at the end of <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOptions"/>.
            </summary>
            <param name="name">The name of the new custom option. Must not be null.</param>
            <param name="value">The value of the new custom option.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithCustomOption(System.String,System.String)">
            <summary>
            Returns a new instance with the same options as this one, but with a new string-valued <see cref="T:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption"/>
            at the end of <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOptions"/>.
            </summary>
            <param name="name">The name of the new custom option. Must not be null.</param>
            <param name="value">The value of the new custom option. Must not be null.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.WithCustomOption(Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption)">
            <summary>
            Returns a new instance with the same options as this one, but with a new integer-valued <see cref="T:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption"/>
            at the end of <see cref="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOptions"/>.
            </summary>
            <param name="option">The additional custom option to include. Must not be null.</param>
            <returns>The new options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.MergedWith(Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <summary>
            Returns a new object, with options from this object merged with <paramref name="overlaidOptions"/>.
            If an option is non-null in both objects, the one from <paramref name="overlaidOptions"/> takes priority.
            </summary>
            <param name="overlaidOptions">The overlaid options. Must not be null.</param>
            <returns>The new merged options.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.Equals(Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <inheritdoc />
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption">
            <summary>
            A custom option, with a name and a value of either a 32-bit integer or a string.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.OptionType">
            <summary>
            Possible types of value within a custom option.
            </summary>
        </member>
        <member name="F:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.OptionType.Integer">
            <summary>
            Channel option with an integer value.
            </summary>
        </member>
        <member name="F:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.OptionType.String">
            <summary>
            Channel option with a string value.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.Name">
            <summary>
            Name of the option. This is never null.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.StringValue">
            <summary>
            Value of the option, for string options. This is never null for string options, and always
            null for other options.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.IntegerValue">
            <summary>
            Value of the option, for integer options, or 0 for other options.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.Type">
            <summary>
            The type of value represented within this option.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.#ctor(System.String,System.Int32)">
            <summary>
            Creates a custom integer option.
            </summary>
            <param name="name">The name of the option. Must not be null.</param>
            <param name="value">Value of the option.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.#ctor(System.String,System.String)">
            <summary>
            Creates a custom string option.
            </summary>
            <param name="name">The name of the option. Must not be null.</param>
            <param name="value">Value of the option. Must not be null.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption.Equals(Google.Api.Gax.Grpc.GrpcChannelOptions.CustomOption)">
            <inheritdoc />
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcPagedAsyncEnumerable`3">
            <summary>
            An asynchronous sequence of resources, obtained lazily via API operations which retrieve a page at a time.
            </summary>
            <typeparam name="TRequest">The API request type.</typeparam>
            <typeparam name="TResponse">The API response type. Each response contains a page of resources.</typeparam>
            <typeparam name="TResource">The resource type contained within the response.</typeparam>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedAsyncEnumerable`3.#ctor(Google.Api.Gax.Grpc.ApiCall{`0,`1},`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new lazily-evaluated asynchronous sequence from the given API call, initial request, and call settings.
            </summary>
            <remarks>The request is cloned each time the sequence is evaluated.</remarks>
            <param name="apiCall">The API call made each time a page is required.</param>
            <param name="request">The initial request.</param>
            <param name="callSettings">The settings to apply to each API call.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedAsyncEnumerable`3.AsRawResponses">
            <inheritdoc/>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedAsyncEnumerable`3.ReadPageAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedAsyncEnumerable`3.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ResourceEnumerator`2">
            <summary>
            Class to effectively perform SelectMany on the pages, extracting resources.
            This allows us to avoid taking a dependency on System.Linq.Async.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ResponseAsyncEnumerable`3">
            <summary>
            An asynchronous sequence of API responses, each containing a page of resources.
            </summary>
            <typeparam name="TRequest">The API request type.</typeparam>
            <typeparam name="TResponse">The API response type.</typeparam>
            <typeparam name="TResource">The resource type contained within the response.</typeparam>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ResponseAsyncEnumerable`3.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Google.Api.Gax.Grpc.GrpcPagedEnumerable`3">
            <summary>
            A sequence of resources, obtained lazily via API operations which retrieve a page at a time.
            </summary>
            <typeparam name="TRequest">The API request type.</typeparam>
            <typeparam name="TResponse">The API response type. Each response contains a page of resources.</typeparam>
            <typeparam name="TResource">The resource type contained within the response.</typeparam>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedEnumerable`3.#ctor(Google.Api.Gax.Grpc.ApiCall{`0,`1},`0,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new lazily-evaluated sequence from the given API call, initial request, and call settings.
            </summary>
            <remarks>The request is cloned each time the sequence is evaluated.</remarks>
            <param name="apiCall">The API call made each time a page is required.</param>
            <param name="request">The initial request.</param>
            <param name="callSettings">The settings to apply to each API call.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedEnumerable`3.AsRawResponses">
            <inheritdoc/>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedEnumerable`3.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Google.Api.Gax.Grpc.GrpcPagedEnumerable`3.ReadPage(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Api.Gax.Grpc.MonitoredResourceBuilder">
            <summary>
            Helper methods to build a <see cref="T:Google.Api.MonitoredResource"/> instance.
            See the <a href="https://cloud.google.com/logging/docs/api/v2/resource-list">
            Monitored Resource List</a> for details.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.MonitoredResourceBuilder.GlobalResource">
            <summary>
            An instance of a "global" resource, with <see cref="P:Google.Api.MonitoredResource.Type"/>
            set to "global", and an empty set of <see cref="P:Google.Api.MonitoredResource.Labels"/>.
            </summary>
            <remarks>
            A new instance is returned with each call, as the returned object is mutable.
            </remarks>
        </member>
        <member name="M:Google.Api.Gax.Grpc.MonitoredResourceBuilder.FromPlatform">
            <summary>
            Builds a <see cref="T:Google.Api.MonitoredResource"/> from the auto-detected
            platform, using <see cref="M:Google.Api.Gax.Platform.Instance"/>.
            This call can block for up to 1 second.
            </summary>
            <returns>A <see cref="T:Google.Api.MonitoredResource"/> instance, populated most suitably for the given platform.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.MonitoredResourceBuilder.FromPlatformAsync">
            <summary>
            Builds a <see cref="T:Google.Api.MonitoredResource"/> from the auto-detected
            platform, using <see cref="M:Google.Api.Gax.Platform.Instance"/>.
            </summary>
            <returns>A task, the result of which will be a <see cref="T:Google.Api.MonitoredResource"/> instance,
            populated most suitably for the given platform.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.MonitoredResourceBuilder.FromPlatform(Google.Api.Gax.Platform)">
            <summary>
            Builds a suitable <see cref="T:Google.Api.MonitoredResource"/> instance, given
            <see cref="T:Google.Api.Gax.Platform"/> information.
            Use <see cref="M:Google.Api.Gax.Grpc.MonitoredResourceBuilder.FromPlatform"/> or <see cref="M:Google.Api.Gax.Grpc.MonitoredResourceBuilder.FromPlatformAsync"/> to build a
            <see cref="T:Google.Api.MonitoredResource"/> from auto-detected platform information.
            </summary>
            <param name="platform"><see cref="T:Google.Api.Gax.Platform"/> information, usually auto-detected.</param>
            <returns>A <see cref="T:Google.Api.MonitoredResource"/> instance, populated most suitably for the given platform.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.IPageRequest">
            <summary>
            A request for a page-streaming operation.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.IPageRequest.PageToken">
            <summary>
            A token indicating the page to return. This is obtained from an earlier response,
            via <see cref="P:Google.Api.Gax.Grpc.IPageResponse`1.NextPageToken"/>.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.IPageRequest.PageSize">
            <summary>
            The maximum number of elements to return in the response.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.IPageResponse`1">
            <summary>
            A response in a page-streaming operation.
            </summary>
            <typeparam name="TResource">The type of resource contained in the response.</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.IPageResponse`1.NextPageToken">
            <summary>
            The token to set in the <see cref="P:Google.Api.Gax.Grpc.IPageRequest.PageToken"/> when requesting
            the next page of results.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.CredentialExtensions">
            <summary>
            Methods to convert ChannelCredentials and CallCredentials into AsyncAuthInterceptors,
            so we can ask them to populate auth headers.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.CredentialExtensions.ToAsyncAuthInterceptor(Grpc.Core.ChannelCredentials)">
            <summary>
            Returns the async auth interceptor derived from the given channel credentials, or null
            if the channel credentials don't involve an interceptor.
            </summary>
            <param name="credentials">The channel credentials to convert.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.CredentialExtensions.ToAsyncAuthInterceptor(Grpc.Core.CallCredentials)">
            <summary>
            Returns the async auth interceptor derived from the given channel credentials, or null
            if the channel credentials don't involve an interceptor.
            </summary>
            <param name="credentials">The channel credentials to convert.</param>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern">
            <summary>
            Representation of a pattern within a google.api.http option, such as "/v4/{parent=projects/*/tenants/*}/jobs".
            The pattern is parsed once, and placeholders (such as "parent" in the above) are interpreted as fields within
            a protobuf request message. The pattern can then be formatted later within the context of a request.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.TopLevelFieldNames">
            <summary>
            Names of the fields of the top-level message that are bound by this pattern.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.HttpRulePathPatternSegment">
            <summary>
            A segment of the HTTP Rule pattern.
            </summary>
        </member>
        <member name="F:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.HttpRulePathPatternSegment._formatter">
            <summary>
            Given a message, 'fill in' this segment's value.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.HttpRulePathPatternSegment.TopLevelFieldName">
            <summary>
            A name of the field in the top-level message that the segment is bound to
            (e.g. for a binding `{foo.bar}`, this will be `foo`)
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.HttpRulePathPatternSegment.CreateFromLiteral(System.String)">
            <summary>
            Creates a new path pattern segment from a literal path segment, e.g. `resources` in `v1/resources/{resource.id}`
            </summary>
            <param name="literal">A literal path segment</param>
            <returns>A new HttpRulePathPatternSegment</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.HttpRulePathPattern.HttpRulePathPatternSegment.CreateFromBoundField(System.String,System.String,Google.Protobuf.Reflection.MessageDescriptor)">
            <summary>
            Creates a new path pattern segment from a path segment with the bound field, e.g. `{resource.id}` in `v1/resources/{resource.id}`
            </summary>
            <param name="propertyPath">A </param>
            <param name="boundFieldPattern"></param>
            <param name="descriptor"></param>
            <returns></returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestCallInvoker">
            <summary>
            CallInvoker implementation which uses regular HTTP requests with JSON payloads.
            This just delegates back to the <see cref="T:Google.Api.Gax.Grpc.Rest.RestChannel"/> that it wraps.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestCallInvoker.AsyncClientStreamingCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestCallInvoker.AsyncDuplexStreamingCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestCallInvoker.AsyncServerStreamingCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions,``0)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestCallInvoker.AsyncUnaryCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions,``0)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestCallInvoker.BlockingUnaryCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions,``0)">
            <inheritdoc />
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestChannel">
            <summary>
            gRPC "channel" that really uses REST/JSON over HTTP to make RPCs.
            The channel is aware of which APIs it supports, so that it's able to perform the
            appropriate request translation.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestChannel.AsyncUnaryCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions,``0)">
            <summary>
            Equivalent to <see cref="M:Grpc.Core.CallInvoker.AsyncUnaryCall``2(Grpc.Core.Method{``0,``1},System.String,Grpc.Core.CallOptions,``0)"/>.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestChannel.ReadHttpResponseMessage">
            <summary>
            In <see cref="T:Grpc.Core.AsyncUnaryCall`1"/> the functions to obtain the TResponse
            and the <see cref="T:Grpc.Core.Status"/> of the call are two different functions.
            The function to obtain the response is async, but the function to obtain the
            <see cref="T:Grpc.Core.Status"/> is not.
            For being able to surface error details in <see cref="T:Grpc.Core.Status"/> we need to be
            able to call <see cref="M:System.Net.Http.HttpContent.ReadAsStringAsync"/> which is an async method,
            and thus cannot be done, without blocking, on the sync function that obtains the 
            <see cref="T:Grpc.Core.Status"/> in the <see cref="T:Grpc.Core.AsyncUnaryCall`1"/>.
            So we need to make async content reading part of sending the call and not part of
            building the TResponse.
            This class is just a convenient wrapper for passing together the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            and its read response.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestGrpcAdapter">
            <summary>
            Implementation of <see cref="T:Google.Api.Gax.Grpc.GrpcAdapter"/> that uses HTTP/1.1 and JSON,
            but via a gRPC <see cref="T:Grpc.Core.CallInvoker"/>.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestGrpcAdapter.CreateChannelImpl(System.String,Grpc.Core.ChannelCredentials,Google.Api.Gax.Grpc.GrpcChannelOptions)">
            <inheritdoc />
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestGrpcAdapter.Create(System.Collections.Generic.IEnumerable{Google.Protobuf.Reflection.FileDescriptor})">
            <summary>
            Creates a gRPC adapter using HTTP/1.1 and JSON, based on the services within the
            given file descriptors.
            </summary>
            <param name="fileDescriptors">File descriptors for all protos that may be involved in RPCs for this adapter.
            All services within the descriptors are expected to be accessible via the same host.</param>
            <returns></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestGrpcAdapter.ConvertHttpStatusCode(System.Int32)">
            <summary>
            Converts an HTTP status code into the corresponding gRPC status code.
            Note that there is not a 1:1 correspondence between status code; multiple
            HTTP status codes can map to the same gRPC status code.
            </summary>
            <param name="httpStatusCode">The HTTP status code to convert</param>
            <returns>The converted gRPC status code.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestMethod">
            <summary>
            Class to convert between proto request/response messages and HTTP request/response messages.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestMethod.Create(Google.Protobuf.Reflection.MethodDescriptor,Google.Protobuf.JsonParser)">
            <summary>
            Creates a <see cref="T:Google.Api.Gax.Grpc.Rest.RestMethod"/> representation from the given protobuf method representation.
            </summary>
            <param name="method">The protobuf method to represent.</param>
            <param name="parser">The JSON parser to use when parsing requests.</param>
            <returns>A representation of the method that can be used to handle HTTP requests/responses.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestMethod.CreateTranscodingContentFactory(Google.Protobuf.Reflection.MethodDescriptor,Google.Api.Gax.Grpc.Rest.HttpRulePathPattern,System.String)">
             <summary>
             This function creates a GRPC Transcoding lambda with curried method descriptor
            
             GRPC Transcoding returns the parameters of the http request, namely
              - the path of the uri
              - the query string parameters
              - the body
             based on the
              - method descriptor, specifically the list of input message fields, and the `google.api.http` annotation
              - the request message
             It is described in the AIP-127 (https://google.aip.dev/127) and the proto comments for google.api.HttpRule
             (https://github.com/googleapis/googleapis/blob/master/google/api/http.proto#L44-L312)
             </summary>
             <returns>A lambda that will provide the transcoding output when the request method is known</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestMethod.CreateRequest(Google.Protobuf.IMessage,System.String)">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpRequestMessage"/> representing a call to the service method. This only
            populates the URI, HTTP method and content of the request. Other headers are expected to be populated afterwards.
            </summary>
            <param name="protoRequest">The request, in protobuf representation.</param>
            <param name="host">The host to create the request for, or null to use the default host for the client sending the request.</param>
            <returns>A request with the URI, method and content populated.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestMethod.AppendQueryStringParameters(System.String,System.Linq.IOrderedEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Merges the uri path and the query string parameters, escaping them.
            Ignores the possibility that the path can already have parameters or contain an anchor (`#`)
            </summary>
            <param name="uriPath">The path component of the service URI</param>
            <param name="queryStringParameters">The parameters to encode in the query string</param>
            <returns>An uri path merged with the encoded query string parameters</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.Rest.RestMethod.ReadResponseAsync``1(System.Threading.Tasks.Task{Google.Api.Gax.Grpc.Rest.RestChannel.ReadHttpResponseMessage})">
            <summary>
            Parses the response and converts it into the protobuf response type.
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.Rest.RestServiceCollection">
            <summary>
            Represents a set of methods all expected to be accessible via the same host.
            (The host itself is not part of the state of this class.)
            TODO: Do we need this class, or could we keep the dictionary directly in RestChannel?
            </summary>
        </member>
        <member name="T:Google.Api.Gax.Grpc.RetryAttempt">
            <summary>
            An attempt at a retriable operation. Use <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})"/>
            or <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})"/> to create a sequence of attempts that follow the specified settings.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetryAttempt.AttemptNumber">
            <summary>
            The 1-based number of this attempt. If this is equal to <see cref="P:Google.Api.Gax.Grpc.RetrySettings.MaxAttempts"/> for the settings
            used to create this attempt, <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)"/> will always return false.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff">
            <summary>
            The time that will be used to sleep or delay in <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)"/> and <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)"/>.
            This has already had jitter applied to it.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.TimeSpan})">
            <summary>
            Returns a sequence of retry attempts. The sequence has <see cref="P:Google.Api.Gax.Grpc.RetrySettings.MaxAttempts"/> elements, and calling
            <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)"/> on the last attempt will always return false. This overload assumes no deadline,
            and so does not require a clock.
            </summary>
            <param name="settings">The retry settings to create a sequence for. Must not be null.</param>
            <param name="scheduler">The scheduler to use for delays.</param>
            <param name="initialBackoffOverride">An override value to allow an initial backoff which is not the same
            as <see cref="P:Google.Api.Gax.Grpc.RetrySettings.InitialBackoff"/>. This is typically to allow an "immediate first retry".</param>
            <returns></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetryAttempt.CreateRetrySequence(Google.Api.Gax.Grpc.RetrySettings,Google.Api.Gax.IScheduler,System.Nullable{System.DateTime},Google.Api.Gax.IClock,System.Nullable{System.TimeSpan})">
            <summary>
            Returns a sequence of retry attempts. The sequence has <see cref="P:Google.Api.Gax.Grpc.RetrySettings.MaxAttempts"/> elements, and calling
            <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)"/> on the last attempt will always return false.
            </summary>
            <param name="settings">The retry settings to create a sequence for. Must not be null.</param>
            <param name="scheduler">The scheduler to use for delays.</param>
            <param name="deadline">The overall deadline for the operation.</param>
            <param name="clock">The clock to use to compare the current time with the deadline.</param>
            <param name="initialBackoffOverride">An override value to allow an initial backoff which is not the same
            as <see cref="P:Google.Api.Gax.Grpc.RetrySettings.InitialBackoff"/>. This is typically to allow an "immediate first retry".</param>
            <returns></returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetryAttempt.ShouldRetry(System.Exception)">
            <summary>
            Indicates whether the operation should be retried when the given exception has been thrown.
            This will return false if the exception indicates that the operation shouldn't be retried,
            or the maximum number of attempts has been reached, or the next backoff would exceed the overall
            deadline. (It is assumed that <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)"/> or <see cref="M:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)"/>
            will be called immediately afterwards.)
            </summary>
            <param name="exception">The exception thrown by the retriable operation.</param>
            <returns><c>true</c> if the operation should be retried; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetryAttempt.Backoff(System.Threading.CancellationToken)">
            <summary>
            Synchronously sleeps for a period of <see cref="P:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff"/>.
            </summary>
            <param name="cancellationToken">The cancellation token to apply to the sleep operation.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetryAttempt.BackoffAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously delays for a period of <see cref="P:Google.Api.Gax.Grpc.RetryAttempt.JitteredBackoff"/>.
            </summary>
            <param name="cancellationToken">The cancellation token to apply to the delay operation.</param>
        </member>
        <member name="T:Google.Api.Gax.Grpc.RetrySettings">
            <summary>
            Settings for retrying RPCs.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.MaxAttempts">
            <summary>
            The maximum number of attempts to make. Always greater than or equal to 1.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.InitialBackoff">
            <summary>
            The backoff time between the first attempt and the first retry. Always non-negative.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.MaxBackoff">
            <summary>
            The maximum backoff time between retries. Always non-negative.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.BackoffMultiplier">
            <summary>
            The multiplier to apply to the backoff on each iteration; always greater than or equal to 1.0.
            </summary>
            <remarks>
            <para>
            As an example, a multiplier of 2.0 with an initial backoff of 0.1s on an RPC would then apply
            a backoff of 0.2s, then 0.4s until it is capped by <see cref="P:Google.Api.Gax.Grpc.RetrySettings.MaxBackoff"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.RetryFilter">
            <summary>
            A predicate to determine whether or not a particular exception should cause the operation to be retried.
            Usually this is simply a matter of checking the status codes. This is never null.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.BackoffJitter">
            <summary>
            The delay jitter to apply for delays, defaulting to <see cref="P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter"/>. This is never null.
            </summary>
            <remarks>
            "Jitter" is used to introduce randomness into the pattern of delays. This is to avoid multiple
            clients performing the same delay pattern starting at the same point in time,
            leading to higher-than-necessary contention. The default jitter simply takes each maximum delay
            and returns an actual delay which is a uniformly random value between 0 and the maximum. This
            is good enough for most applications, but makes precise testing difficult.
            </remarks>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.Double,System.Predicate{System.Exception},Google.Api.Gax.Grpc.RetrySettings.IJitter)">
            <summary>
            Creates a new instance with the given settings.
            </summary>
            <param name="maxAttempts">The maximum number of attempts to make. Must be positive.</param>
            <param name="initialBackoff">The backoff after the initial failure. Must be non-negative.</param>
            <param name="maxBackoff">The maximum backoff. Must be at least <paramref name="initialBackoff"/>.</param>
            <param name="backoffMultiplier">The multiplier to apply to backoff times. Must be at least 1.0.</param>
            <param name="retryFilter">The predicate to use to check whether an error should be retried. Must not be null.</param>
            <param name="backoffJitter">The jitter to use on each backoff. Must not be null.</param>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.FromConstantBackoff(System.Int32,System.TimeSpan,System.Predicate{System.Exception},Google.Api.Gax.Grpc.RetrySettings.IJitter)">
            <summary>
            Returns a <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> using the specified maximum number of attempts and a constant backoff.
            Jitter is still applied to each backoff, but the "base" value of the backoff is always <paramref name="backoff"/>.
            </summary>
            <param name="maxAttempts">The maximum number of attempts to make. Must be positive.</param>
            <param name="backoff">The backoff after each failure. Must be non-negative.</param>
            <param name="retryFilter">The predicate to use to check whether an error should be retried. Must not be null.</param>
            <param name="backoffJitter">The jitter to use on each backoff. May be null, in which case <see cref="P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter"/> is used.</param>
            <returns>A retry with constant backoff.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.FromExponentialBackoff(System.Int32,System.TimeSpan,System.TimeSpan,System.Double,System.Predicate{System.Exception},Google.Api.Gax.Grpc.RetrySettings.IJitter)">
            <summary>
            Returns a <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> using the specified maximum number of attempts and an exponential backoff.
            </summary>
            <param name="maxAttempts">The maximum number of attempts to make. Must be positive.</param>
            <param name="initialBackoff">The backoff after the initial failure. Must be non-negative.</param>
            <param name="maxBackoff">The maximum backoff. Must be at least <paramref name="initialBackoff"/>.</param>
            <param name="backoffMultiplier">The multiplier to apply to backoff times. Must be at least 1.0.</param>
            <param name="retryFilter">The predicate to use to check whether an error should be retried. Must not be null.</param>
            <param name="backoffJitter">The jitter to use on each backoff. May be null, in which case <see cref="P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter"/> is used.</param>
            <returns>A retry with exponential backoff.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.RetrySettings.IJitter">
            <summary>
            Provides a mechanism for applying jitter to delays between retries.
            See the <see cref="P:Google.Api.Gax.Grpc.RetrySettings.BackoffJitter"/> property for more information.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.IJitter.GetDelay(System.TimeSpan)">
            <summary>
            Returns the actual delay to use given a maximum available delay.
            </summary>
            <param name="maxDelay">The maximum delay provided by the backoff settings</param>
            <returns>The delay to use before retrying.</returns>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.RandomJitter">
            <summary>
            The default jitter which returns a uniformly distributed random delay between 0 and
            the specified maximum.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.RetrySettings.NoJitter">
            <summary>
            A jitter which simply returns the specified maximum delay.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(Grpc.Core.StatusCode[])">
            <summary>
            Creates a retry filter based on status codes.
            </summary>
            <param name="statusCodes">The status codes to retry. Must not be null.</param>
            <returns>A retry filter based on status codes.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.FilterForStatusCodes(System.Collections.Generic.IEnumerable{Grpc.Core.StatusCode})">
            <summary>
            Creates a retry filter based on status codes.
            </summary>
            <param name="statusCodes">The status codes to retry. Must not be null.</param>
            <returns>A retry filter based on status codes.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RetrySettings.NextBackoff(System.TimeSpan)">
            <summary>
            Works out the next backoff from the current one, based on the multiplier and maximum.
            </summary>
            <param name="currentBackoff">The current backoff to use as a basis for the next one.</param>
            <returns>The next backoff to use, which is always at least <see cref="P:Google.Api.Gax.Grpc.RetrySettings.InitialBackoff"/> and at most <see cref="P:Google.Api.Gax.Grpc.RetrySettings.MaxBackoff"/>.</returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.RpcExceptionExtensions">
            <summary>
            Utility extension methods to make it easier to retrieve extended error information from an <see cref="T:Grpc.Core.RpcException"/>.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RpcExceptionExtensions.GetRpcStatus(Grpc.Core.RpcException)">
            <summary>
            Retrieves the <see cref="T:Google.Rpc.Status"/> message containing extended error information
            from the trailers in an <see cref="T:Grpc.Core.RpcException"/>, if present.
            </summary>
            <param name="ex">The RPC exception to retrieve details from. Must not be null.</param>
            <returns>The <see cref="T:Google.Rpc.Status"/> message specified in the exception, or null
            if there is no such information.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RpcExceptionExtensions.GetBadRequest(Grpc.Core.RpcException)">
            <summary>
            Retrieves the <see cref="T:Google.Rpc.BadRequest"/> message containing extended error information
            from the trailers in an <see cref="T:Grpc.Core.RpcException"/>, if present.
            </summary>
            <param name="ex">The RPC exception to retrieve details from. Must not be null.</param>
            <returns>The <see cref="T:Google.Rpc.BadRequest"/> message specified in the exception, or null
            if there is no such information.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RpcExceptionExtensions.GetErrorInfo(Grpc.Core.RpcException)">
            <summary>
            Retrieves the <see cref="T:Google.Rpc.ErrorInfo"/> message containing extended error information
            from the trailers in an <see cref="T:Grpc.Core.RpcException"/>, if present.
            </summary>
            <param name="ex">The RPC exception to retrieve details from. Must not be null.</param>
            <returns>The <see cref="T:Google.Rpc.ErrorInfo"/> message specified in the exception, or null
            if there is no such information.</returns>
        </member>
        <member name="M:Google.Api.Gax.Grpc.RpcExceptionExtensions.GetStatusDetail``1(Grpc.Core.RpcException)">
            <summary>
            Retrieves the error details of type <typeparamref name="T"/> from the <see cref="T:Google.Rpc.Status"/>
            message associated with an <see cref="T:Grpc.Core.RpcException"/>, if any.
            </summary>
            <typeparam name="T">The message type to decode from within the error details.</typeparam>
            <param name="ex">The RPC exception to retrieve details from. Must not be null.</param>
            <returns></returns>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ServerStreamingBase`1">
            <summary>
            Base class for server streaming RPC methods.
            </summary>
            <typeparam name="TResponse">RPC streaming response type</typeparam>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall">
            <summary>
            The underlying gRPC duplex streaming call.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ServerStreamingBase`1.GetResponseStream">
            <summary>
            Async stream to read streaming responses, exposed as an async sequence.
            The default implementation will use <see cref="P:Google.Api.Gax.Grpc.ServerStreamingBase`1.GrpcCall"/> to extract a response
            stream, and adapt it to <see cref="T:Google.Api.Gax.Grpc.AsyncResponseStream`1"/>.
            </summary>
            <remarks>
            If this method is called more than once, all the returned enumerators will be enumerating over the
            same underlying response stream, which may cause confusion. Additionally, the sequence returned by
            this method can only be iterated over a single time. Attempting to iterate more than once will cause
            an <see cref="T:System.InvalidOperationException"/>.
            </remarks>
        </member>
        <member name="T:Google.Api.Gax.Grpc.ServiceSettingsBase">
            <summary>
            Common settings for all services.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ServiceSettingsBase.#ctor">
            <summary>
            Constructs a new service settings base object with a default version header, unset call settings and
            unset clock.
            </summary>
        </member>
        <member name="M:Google.Api.Gax.Grpc.ServiceSettingsBase.#ctor(Google.Api.Gax.Grpc.ServiceSettingsBase)">
            <summary>
            Constructs a new service settings base object by cloning the settings from an existing one.
            </summary>
            <param name="existing">The existing settings object to clone settings from. Must not be null.</param>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServiceSettingsBase.VersionHeaderBuilder">
            <summary>
            A builder for x-goog-api-client version headers. Additional library versions can be appended via this property.
            End-users should almost never need to use this property; it is primarily for use in Google libraries which provide
            a higher level abstraction over the generated client libraries.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServiceSettingsBase.CallSettings">
            <summary>
            If not null, <see cref="P:Google.Api.Gax.Grpc.ServiceSettingsBase.CallSettings"/> that are applied to every RPC performed by the client.
            If null or unset, RPC default settings will be used for all settings.
            </summary>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServiceSettingsBase.Clock">
            <summary>
            If not null, the clock used to calculate RPC deadlines. If null or unset, the <see cref="T:Google.Api.Gax.SystemClock"/> is used.
            </summary>
            <remarks>
            This is primarily only to be set for testing.
            In production code generally leave this unset to use the <see cref="T:Google.Api.Gax.SystemClock"/>.
            </remarks>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServiceSettingsBase.Scheduler">
            <summary>
            If not null, the scheduler used for delays between operations (e.g. for retry).
            If null or unset, the <see cref="T:Google.Api.Gax.SystemScheduler"/> is used.
            </summary>
            <remarks>
            This is primarily only to be set for testing.
            In production code generally leave this unset to use the <see cref="T:Google.Api.Gax.SystemScheduler"/>.
            </remarks>
        </member>
        <member name="P:Google.Api.Gax.Grpc.ServiceSettingsBase.Interceptor">
            <summary>
            An optional gRPC interceptor to perform arbitrary interception tasks (such as logging) on gRPC calls.
            Note that this property is not used by code generated before August 2nd 2018: only packages created
            on or after that date are aware of this property.
            </summary>
        </member>
    </members>
</doc>
